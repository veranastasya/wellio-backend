/* tslint:disable */
/* eslint-disable */
/**
 * Wellio Core API
 * Core API for the Wellio wellness coaching platform
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@wellio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Client
 */
export interface Client {
    /**
     * 
     * @type {string}
     * @memberof Client
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Client
     */
    fullName?: string;
    /**
     * 
     * @type {string}
     * @memberof Client
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof Client
     */
    phone?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Client
     */
    services?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Client
     */
    attentionStatus?: ClientAttentionStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof Client
     */
    joinedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Client
     */
    nextSessionAt?: Date | null;
    /**
     * 
     * @type {object}
     * @memberof Client
     */
    tags?: object;
}


/**
 * @export
 */
export const ClientAttentionStatusEnum = {
    OnTrack: 'on_track',
    NeedsAttention: 'needs_attention'
} as const;
export type ClientAttentionStatusEnum = typeof ClientAttentionStatusEnum[keyof typeof ClientAttentionStatusEnum];


/**
 * Check if a given object implements the Client interface.
 */
export function instanceOfClient(value: object): value is Client {
    return true;
}

export function ClientFromJSON(json: any): Client {
    return ClientFromJSONTyped(json, false);
}

export function ClientFromJSONTyped(json: any, ignoreDiscriminator: boolean): Client {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'fullName': json['full_name'] == null ? undefined : json['full_name'],
        'email': json['email'] == null ? undefined : json['email'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'services': json['services'] == null ? undefined : json['services'],
        'attentionStatus': json['attention_status'] == null ? undefined : json['attention_status'],
        'joinedAt': json['joined_at'] == null ? undefined : (new Date(json['joined_at'])),
        'nextSessionAt': json['next_session_at'] == null ? undefined : (new Date(json['next_session_at'])),
        'tags': json['tags'] == null ? undefined : json['tags'],
    };
}

export function ClientToJSON(json: any): Client {
    return ClientToJSONTyped(json, false);
}

export function ClientToJSONTyped(value?: Client | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'full_name': value['fullName'],
        'email': value['email'],
        'phone': value['phone'],
        'services': value['services'],
        'attention_status': value['attentionStatus'],
        'joined_at': value['joinedAt'] == null ? undefined : ((value['joinedAt']).toISOString()),
        'next_session_at': value['nextSessionAt'] === null ? null : ((value['nextSessionAt'] as any)?.toISOString()),
        'tags': value['tags'],
    };
}

